package com.algaworks.ebookjpa.lojaveiculos.domain;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.Lob;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import com.algaworks.ebookjpa.lojaveiculos.enumerator.TipoCombustivel;

import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
@Entity
@Table(name = "tab_veiculo")
public class Veiculo {
	
	@EmbeddedId
	private VeiculoId codigo;
	
	@Column(length = 60, nullable = false) // apenas para exemplo. Ao omitir o jpa mapeia todos os atributos
	private	String fabricante;
	
	@Column(length = 60, nullable = false)
	private String modelo;
	
	@Column(name = "ano_fabricacao", nullable = false)
	private Integer anoFabricacao;
	
	@Column(name = "ano_modelo", nullable = false)
	private Integer anoModelo;
	
	@Column(precision = 10, scale = 2, nullable = true)
	private BigDecimal valor;
	
	@Column(name = "tipo_combustivel", nullable = false)
	@Enumerated(EnumType.STRING)
	private TipoCombustivel tipoCombustivel;
	
	@Column(name = "data_cadastro", nullable = false)
	private LocalDate dataCadastro;
	
	@Transient
	private String descricaoCompleta;
	
	@Lob
	private String especificacoes;
	
	@Lob
	private byte[] foto;
	
	@ManyToOne
	@JoinColumn(name = "cod_proprietario")
	private Proprietario proprietario;
	
	@ManyToMany
	@JoinTable(name = "veiculo_acessorio")
	private Set<Acessorio> acessorios = new HashSet<Acessorio>();
	

	@Override
	public boolean equals(Object obj) {
		
		if (this == obj) return true;
		
		if (obj == null || getClass() != obj.getClass()) return false;
		
		Veiculo veiculo = (Veiculo) obj;
		return codigo != null ? codigo.equals(veiculo.getCodigo()) : veiculo.codigo == null;
	}
	
	@Override
	public int hashCode() {
		
		return codigo != null ? codigo.hashCode() : 0;
	}

}
